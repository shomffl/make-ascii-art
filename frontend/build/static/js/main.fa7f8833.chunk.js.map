{"version":3,"sources":["Home.tsx","components/DownloadImage.tsx","apple.png","components/Remake.tsx","components/SubmitImage.tsx","components/ImageDisplay.tsx","router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","navigate","useNavigate","useEffect","axios","get","then","res","console","log","data","message","className","onClick","DownloadImage","memo","props","downloadPath","Button","saveAs","process","variant","Remake","setImage","setOpenDownload","setCanClickSelect","logo","SubmitImage","useState","setDownloadPath","openDownload","canClickSend","setCanClickSend","openSnackbar","setOpenSnackbar","canClickSelect","action","Fragment","IconButton","size","color","e","fontSize","Stack","direction","spacing","onSubmit","form","FormData","target","preventDefault","post","headers","name","onChange","Snackbar","open","accept","type","style","display","disabled","component","ImageDisplay","image","src","width","Router","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa7f8833.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nexport const Home: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const onClickPage = () => {\r\n    navigate(\"./make\");\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/create_folder\").then((res) => {\r\n      console.log(res.data.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button onClick={onClickPage}>push</button>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, memo } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\n\r\nexport const DownloadImage: React.FC<{ downloadPath: any }> = memo(\r\n  (props) => {\r\n    const { downloadPath } = props;\r\n    const onClickDownload = () => {\r\n      saveAs(\r\n        downloadPath,\r\n        \"ascii_art\"\r\n      );\r\n      console.log(\r\n        `${process.env.PUBLIC_URL}/static/images/ascii_images/${downloadPath}`\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={onClickDownload} variant=\"contained\">\r\n          Download\r\n          <DownloadIcon />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","export default __webpack_public_path__ + \"static/media/apple.7e4c522c.png\";","import React, { Dispatch } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay\";\r\nimport logo from \"../apple.png\";\r\n\r\nexport const Remake: React.FC<{\r\n  setImage: Dispatch<React.SetStateAction<string>>;\r\n  setOpenDownload: Dispatch<React.SetStateAction<boolean>>;\r\n  setCanClickSelect: Dispatch<React.SetStateAction<boolean>>;\r\n}> = (props) => {\r\n  const { setImage, setOpenDownload, setCanClickSelect } = props;\r\n  const onClickRemake = () => {\r\n    setImage(logo);\r\n    setOpenDownload(false);\r\n    setCanClickSelect(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" onClick={onClickRemake}>\r\n        Remake\r\n        <ReplayIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport axios from \"axios\";\r\nimport { DownloadImage } from \"./DownloadImage\";\r\nimport { Remake } from \"./Remake\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const SubmitImage: React.FC<{\r\n  setImage: Dispatch<SetStateAction<string>>;\r\n}> = (props) => {\r\n  const { setImage } = props;\r\n  const [downloadPath, setDownloadPath] = useState(\"\");\r\n  const [openDownload, setOpenDownload] = useState(false);\r\n  const [canClickSend, setCanClickSend] = useState(true);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n  const [canClickSelect, setCanClickSelect] = useState(false);\r\n\r\n  const onClickSubmit = (e: any) => {\r\n    const form = new FormData(e.target);\r\n    setOpenSnackbar(false);\r\n    setCanClickSelect(true);\r\n    setCanClickSend(true);\r\n\r\n    e.preventDefault();\r\n    const Upload = () => {\r\n      axios\r\n        .post(\"/make\", form, {\r\n          headers: { \"content-type\": \"multipart/form-data\" },\r\n        })\r\n        .then((res) => {\r\n          setImage(res.data.name);\r\n          setDownloadPath(res.data.name);\r\n          setOpenDownload(true);\r\n        });\r\n    };\r\n    Upload();\r\n  };\r\n  const imageSelected = (e: any) => {\r\n    setCanClickSend(false);\r\n    setOpenSnackbar(true);\r\n    setCanClickSelect(false);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={(e) => setOpenSnackbar(false)}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {openDownload ? (\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <DownloadImage downloadPath={downloadPath} />\r\n          <Remake setImage={setImage} setOpenDownload={setOpenDownload} setCanClickSelect={setCanClickSelect}/>\r\n        </Stack>\r\n      ) : (\r\n        <form onSubmit={onClickSubmit} onChange={imageSelected}>\r\n          <Snackbar\r\n            open={openSnackbar}\r\n            message=\"image was selected!!\"\r\n            action={action}\r\n          />\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <label>\r\n              <input\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: \"none\" }}\r\n                disabled={canClickSelect}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                component=\"span\"\r\n                disabled={canClickSelect}\r\n              >\r\n                Select\r\n              </Button>\r\n            </label>\r\n            <label>\r\n              <Button variant=\"contained\" type=\"submit\" disabled={canClickSend}>\r\n                <span>Send</span>\r\n                <SendIcon />\r\n              </Button>\r\n            </label>\r\n          </Stack>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { SubmitImage } from \"./SubmitImage\";\r\nimport logo from \"../apple.png\";\r\n\r\nexport const ImageDisplay = () => {\r\n  const [image, setImage] = useState(logo);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={image} style={{ width: \"500px\" }} />\r\n        <SubmitImage setImage={setImage} />\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"../Home\";\r\nimport { ImageDisplay } from \"../components/ImageDisplay\";\r\n\r\n\r\nexport const Router: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/make\" element={<ImageDisplay />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Router } from \"./router/Router\";\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Router />\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}