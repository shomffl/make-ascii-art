{"version":3,"sources":["Home.tsx","components/DownloadImage.tsx","components/Remake.tsx","components/SubmitImage.tsx","apple.png","components/ImageDisplay.tsx","router/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","navigate","useNavigate","useState","text","setText","useEffect","axios","get","then","res","console","log","data","message","className","onClick","time","to","DownloadImage","memo","props","downloadPath","Button","saveAs","process","variant","Remake","SubmitImage","setImage","setDownloadPath","openDownload","setOpenDownload","canClickSend","setCanClickSend","openSnackbar","setOpenSnackbar","action","Fragment","IconButton","size","color","e","fontSize","Stack","direction","spacing","onSubmit","form","FormData","target","preventDefault","post","headers","name","onChange","Snackbar","open","accept","type","style","display","component","disabled","ImageDisplay","logo","image","src","width","Router","path","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2db18f87.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\n\r\nexport const Home: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [text, setText] = useState(\"hello\");\r\n  const onClickPage = () => {\r\n    navigate(\"./page_a\");\r\n  };\r\n\r\n  const onClickGetTime = () => {\r\n    axios.get(\"/home\").then((res) => {\r\n      setText(res.data.time);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/create_folder\").then((res) => {\r\n      console.log(res.data.message);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button onClick={onClickGetTime}>get</button>\r\n        <h1>Home</h1>\r\n        <Link to=\"/page_a\">PageA</Link>\r\n        {text}\r\n        <button onClick={onClickPage}>push</button>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, memo } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport Button from \"@mui/material/Button\";\r\nimport DownloadIcon from \"@mui/icons-material/Download\";\r\n\r\nexport const DownloadImage: React.FC<{ downloadPath: any }> = memo(\r\n  (props) => {\r\n    const { downloadPath } = props;\r\n    const onClickDownload = () => {\r\n      saveAs(\r\n        downloadPath,\r\n        \"ascii_art\"\r\n      );\r\n      console.log(\r\n        `${process.env.PUBLIC_URL}/static/images/ascii_images/${downloadPath}`\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={onClickDownload} variant=\"contained\">\r\n          Download\r\n          <DownloadIcon />\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ReplayIcon from \"@mui/icons-material/Replay\";\r\n\r\nexport const Remake = () => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\">\r\n        Remake\r\n        <ReplayIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, Dispatch, SetStateAction } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport axios from \"axios\";\r\nimport { DownloadImage } from \"./DownloadImage\";\r\nimport { Remake } from \"./Remake\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nexport const SubmitImage: React.FC<{\r\n  setImage: Dispatch<SetStateAction<string>>;\r\n}> = (props) => {\r\n  const { setImage } = props;\r\n  const [downloadPath, setDownloadPath] = useState(\"\");\r\n  const [openDownload, setOpenDownload] = useState(false);\r\n  const [canClickSend, setCanClickSend] = useState(true);\r\n  const [openSnackbar, setOpenSnackbar] = useState(false);\r\n\r\n  const onClickSubmit = (e: any) => {\r\n    const form = new FormData(e.target);\r\n    setOpenSnackbar(false);\r\n\r\n    e.preventDefault();\r\n    const Upload = () => {\r\n      axios\r\n        .post(\"/make\", form, {\r\n          headers: { \"content-type\": \"multipart/form-data\" },\r\n        })\r\n        .then((res) => {\r\n          setImage(res.data.name);\r\n          setDownloadPath(res.data.name);\r\n          setOpenDownload(true);\r\n        });\r\n    };\r\n    Upload();\r\n  };\r\n  const imageSelected = (e: any) => {\r\n    setCanClickSend(false);\r\n    setOpenSnackbar(true);\r\n  };\r\n\r\n  const action = (\r\n    <React.Fragment>\r\n      <IconButton\r\n        size=\"small\"\r\n        aria-label=\"close\"\r\n        color=\"inherit\"\r\n        onClick={(e) => setOpenSnackbar(false)}\r\n      >\r\n        <CloseIcon fontSize=\"small\" />\r\n      </IconButton>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {openDownload ? (\r\n        <Stack direction=\"row\" spacing={2}>\r\n          <DownloadImage downloadPath={downloadPath} />\r\n          <Remake />\r\n        </Stack>\r\n      ) : (\r\n        <form onSubmit={onClickSubmit} onChange={imageSelected}>\r\n          <Snackbar\r\n            open={openSnackbar}\r\n            message=\"image was selected!!\"\r\n            action={action}\r\n          />\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <label>\r\n              <input\r\n                accept=\"image/*\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n              <Button variant=\"contained\" component=\"span\">\r\n                Upload\r\n              </Button>\r\n            </label>\r\n            <label>\r\n              <Button variant=\"contained\" type=\"submit\" disabled={canClickSend}>\r\n                <span>Send</span>\r\n                <SendIcon />\r\n              </Button>\r\n            </label>\r\n          </Stack>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/apple.7e4c522c.png\";","import React, { useState } from \"react\";\r\nimport { SubmitImage } from \"./SubmitImage\";\r\nimport logo from \"../apple.png\";\r\n\r\nexport const ImageDisplay = () => {\r\n  const [image, setImage] = useState(logo);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={image} style={{ width: \"500px\" }} />\r\n        <SubmitImage setImage={setImage} />\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"../Home\";\r\nimport { ImageDisplay } from \"../components/ImageDisplay\";\r\n\r\n\r\nexport const Router: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/page_a\" element={<ImageDisplay />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Router } from \"./router/Router\";\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Router />\n    </>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}